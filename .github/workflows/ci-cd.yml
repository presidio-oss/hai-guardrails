name: CI/CD
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: write
  packages: write
  checks: write
  pull-requests: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .tool-versions

      - name: Install dependencies
        run: bun install

      - name: Run format check
        run: bun run format:check

  build:
    name: Build
    needs: lint
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .tool-versions

      - name: Install dependencies
        run: bun install

      - name: Version and Build
        run: |
          # Configure git
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          # Build
          bun run build

      - name: Generate hashes
        id: hash
        run: |
          cd dist
          echo "hashes=$(find . -type f -not -path "*/node_modules/*" -not -path "*/\.*" | sort | xargs sha256sum | base64 -w0)" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/

  generate-sbom:
    name: Generate SBOM
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .tool-versions

      - name: Install dependencies
        run: bun install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          format: spdx-json
          output-file: sbom.spdx.json
          artifact-name: sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-artifact
          path: sbom.spdx.json
          retention-days: 90

  generate-provenance:
    name: Generate Provenance
    needs: build
    permissions:
      actions: read
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: Generate provenance
        uses: slsa-framework/slsa-github-generator@v1.9.0
        with:
          base64-subjects-as-input: ${{ needs.build.outputs.hashes }}
          upload-assets: true
          provenance-name: provenance.intoto.jsonl

      - name: Upload provenance
        uses: actions/upload-artifact@v4
        with:
          name: provenance-artifact
          path: provenance.intoto.jsonl
          retention-days: 90

  release:
    name: Release
    needs: [build, generate-sbom, generate-provenance]
    if: github.event_name == 'push' && github.ref == 'refs/heads/release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .tool-versions

      - name: Install dependencies
        run: bun install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Download SBOM
        uses: actions/download-artifact@v4
        with:
          name: sbom-artifact
          path: .

      - name: Download provenance
        uses: actions/download-artifact@v4
        with:
          name: provenance-artifact
          path: .

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: |
          # Configure git
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          # Configure npm for publishing
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NODE_AUTH_TOKEN }}" >> ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc

          # Release
          bun run release:ci
